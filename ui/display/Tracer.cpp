/******************************************************************************
* 版权所有 (C)2008，xxxx公司
*
* 文件名称： // Tracer.cpp
* 内容摘要： // Tracer类的实现
* 其它说明： // 无
* 版 本 号： // V0.0.1.0
* 作    者： // 部门 xxx
* 完成日期： // 2015年7月15日
*
* 修改记录1： // 修改历史记录，包括修改日期、现版本号、修改者及修改内容
*   修改日期：
*   版 本 号：
*   修 改 人：
*   修改内容：
* 修改记录2：...
******************************************************************************/


/******************************************************************************
*                                 头文件包含                                  *
******************************************************************************/
#include "Tracer.h"

#include <iostream>
#include <assert.h>


/******************************************************************************
*                                 常量定义                                    *
******************************************************************************/


/******************************************************************************
*                                 宏定义                                      *
******************************************************************************/


/******************************************************************************
*                                 数据类型                                    *
******************************************************************************/


/******************************************************************************
*                                 全局变量                                    *
******************************************************************************/


/******************************************************************************
*                                 局部函数原型                                *
******************************************************************************/


/******************************************************************************
*                                 类实现                                      *
******************************************************************************/



/******************************************************************************
* 函数名称：Tracer
* 功能描述：Tracer类的构造函数。
* 访问的表：无
* 修改的表：无
* 输入参数：moduleName		当前调试的模块名称
*        functionName	当前调试的函数名称
* 输出参数：无
* 返 回 值：无
* 其他说明：无
* 修改日期    版本号    修改人     修改内容
* ------------------------------------------
* 2015/07/15  V0.0.1.0  xxx     创建函数
******************************************************************************/
#ifdef QT_ENV
Tracer::Tracer(const QString &moduleName, const QString &functionName)
#else
Tracer::Tracer(const char *moduleName, const char *functionName)
#endif
{
	assert(moduleName != NULL);
	assert(functionName != NULL);
    m_infoHead      = moduleName;
    m_functionName  = functionName;
#ifdef QT_ENV
    qDebug() << "[" << m_infoHead << "]"
              << " enter " << m_functionName;
#else
    std::cout << m_infoHead
              << "enter " << m_functionName
              << std::endl;
#endif

}


/******************************************************************************
* 函数名称：~Tracer
* 功能描述：Tracer类的析构函数。
* 访问的表：无
* 修改的表：无
* 输入参数：无
* 输出参数：无
* 返 回 值：无
* 其他说明：无
* 修改日期    版本号    修改人     修改内容
* ------------------------------------------
* 2015/07/15  V0.0.1.0  xxx     创建函数
******************************************************************************/
Tracer::~Tracer()
{
#ifdef QT_ENV
    qDebug() << "[" << m_infoHead << "]"
              << " leave " << m_functionName;
#else
	std::cout << m_infoHead
			  << "leave " << m_functionName
			  << std::endl;
#endif
}




/******************************************************************************
*                                 全局函数实现                                *
******************************************************************************/


/******************************************************************************
*                                 局部函数实现                                *
******************************************************************************/
